// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    RAM8(in=in, load=Dmux0, address= address[0..2], out= r0);
    RAM8(in=in, load=Dmux1, address= address[0..2], out= r1);
    RAM8(in=in, load=Dmux2, address= address[0..2], out= r2);
    RAM8(in=in, load=Dmux3, address= address[0..2], out= r3);
    RAM8(in=in, load=Dmux4, address= address[0..2], out= r4);
    RAM8(in=in, load=Dmux5, address= address[0..2], out= r5);
    RAM8(in=in, load=Dmux6, address= address[0..2], out= r6);
    RAM8(in=in, load=Dmux7, address= address[0..2], out= r7);
    DMux8Way(in=load , sel= address[3..5] , a=Dmux0, b=Dmux1 , c=Dmux2 , d=Dmux3 , e=Dmux4 , f=Dmux5 , g=Dmux6 , h=Dmux7 );
    Mux8Way16(a=r0 , b=r1, c=r2, d=r3 , e=r4 , f=r5 , g=r6 , h=r7 , sel=address[3..5] , out= out);
}